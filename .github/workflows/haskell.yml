name: Haskell CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # run at the start of every day
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }} 
    strategy:
      matrix:
        ghc: ['9.0']
        cabal: ['3.10']
        os: [ubuntu-20.04]
    name: ${{ matrix.os }} GHC ${{ matrix.ghc }} Cabal ${{ matrix.cabal }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
    
    - name: Free up environment resources
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"

    - name: Setup Haskell
      uses: haskell/actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Freeze lion
      run: cabal freeze
    - name: Freeze lion-formal
      working-directory: lion-formal
      run: cabal freeze
    - name: Freeze lion-metric
      working-directory: lion-metric
      run: cabal freeze
    - name: Freeze lion-soc
      working-directory: lion-soc
      run: cabal freeze

    - name: Cache ~/.cabal/packages, ~/.cabal/store and dist-newstyle
      uses: actions/cache@v3
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
          lion-formal/dist-newstyle
          lion-metric/dist-newstyle
          lion-soc/dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal', '**/cabal.project', '**/cabal.project.freeze') }}
        restore-keys: ${{ runner.os }}-${{ matrix.ghc }}-

    - name: Build library
      run: cabal build

    - name: Install icestorm prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install build-essential clang bison flex libreadline-dev gawk tcl-dev libffi-dev git graphviz xdot pkg-config python python3 libftdi-dev qt5-default python3-dev libboost-all-dev cmake libeigen3-dev

    - name: Checkout icestorm
      uses: actions/checkout@v3
      with:
        repository: YosysHQ/icestorm
        path: icestorm

    - name: Install icestorm
      working-directory: icestorm
      run: |
        make
        sudo make install

    - name: Checkout nextpnr
      uses: actions/checkout@v3
      with:
        repository: YosysHQ/nextpnr
        ref: master
        path: nextpnr
        submodules: true

    - name: Install nextpnr
      working-directory: nextpnr
      run: |
        cmake -DARCH=ice40 -DCMAKE_INSTALL_PREFIX=/usr/local .
        make
        sudo make install

    - name: Checkout yosys
      uses: actions/checkout@v3
      with:
        repository: YosysHQ/yosys
        ref: master
        path: yosys

    - name: Install yosys
      working-directory: yosys
      run: |
        make -j$(nproc)
        sudo make install

    - name: Checkout SymbiYosys
      uses: actions/checkout@v3
      with:
        repository: YosysHQ/SymbiYosys
        ref: master
        path: SymbiYosys

    - name: Install SymbiYosys
      working-directory: SymbiYosys
      run: |
        sudo apt-get install libboost-program-options-dev autoconf libgmp-dev cmake
        sudo make install

    - name: Checkout Boolector
      uses: actions/checkout@v3
      with:
        repository: boolector/boolector
        ref: master
        path: boolector

    - name: Install boolector
      working-directory: boolector
      run: |
        ./contrib/setup-btor2tools.sh
        ./contrib/setup-lingeling.sh
        ./configure.sh
        make -C build -j$(nproc)
        sudo cp build/bin/{boolector,btor*} /usr/local/bin
        sudo cp deps/btor2tools/bin/btorsim /usr/local/bin

    - name: Checkout riscv-gnu-toolchain
      uses: actions/checkout@v3
      with:
        repository: riscv/riscv-gnu-toolchain
        ref: master
        path: riscv-gnu-toolchain

    - name: Install RISC-V toolchains
      working-directory: riscv-gnu-toolchain
      run: |
        sudo apt-get install autoconf automake autotools-dev curl python3 libmpc-dev libmpfr-dev libgmp-dev texinfo libtool patchutils bc zlib1g-dev libexpat-dev
        ./configure --prefix=$HOME/opt/riscv
        sudo make
        echo "$HOME/opt/riscv/bin" >> $GITHUB_PATH

    - name: Formal Verification
      working-directory: lion-formal
      run: |
        cabal build
        cabal run
        cabal run formal -- clean
        cabal clean

    - name: SoC
      working-directory: lion-soc
      run: |
        cabal build
        cabal run soc
        cabal run soc -- clean
        cabal clean

    - name: Metric
      working-directory: lion-metric
      run: |
        cabal build
        cabal run 
        cabal run metric -- clean
        cabal clean
